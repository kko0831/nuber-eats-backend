### 10.14
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  category(slug: "mexican-food") {
    ok
    error
    category {
      id
      name
      slug
      restaurantCount
      restaurants {
        id
        name
      }
    }
  }
}

### 10.14
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  category(slug: "mexican-bbq") {
    ok
    error
    category {
      id
      name
      slug
      restaurantCount
      restaurants {
        id
        name
      }
    }
  }
}

### 10.14
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  category(slug: "korean-bbq") {
    ok
    error
    category {
      id
      name
      slug
      restaurantCount
      restaurants {
        id
        name
      }
    }
  }
}

### 10.13
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  allCategories {
    ok
    error
    categories {
      slug
      name
      restaurantCount
    }
  }
}

### 10.13
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createRestaurant(input: {
    name: "BBQ House"
    coverImg: "https:///"
    address: "123 Altavista"
    categoryName: "Korean BBq"
  }) {
    ok
    error
  }
}

### 10.13
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 10.13
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  allCategories {
    ok
    error
    categories {
      slug
      name
      restaurantCount
    }
  }
}

### 10.12
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  allCategories {
    ok
    error
    categories {
      slug
      name
      restaurantCount
    }
  }
}

### 10.12
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  allCategories {
    ok
    error
    categories {
      slug
      name
    }
  }
}

### 10.10
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: X-JWT: login하고 생성된 token

mutation {
  editRestaurant(input: {
    restaurantId: 3
    name: "The Mexican House"
  }) {
    ok
    error
  }
}

### 10.10
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: X-JWT: login하고 생성된 token

mutation {
  editRestaurant(input: {
    restaurantId: 3
    name: "The BBQ House"
  }) {
    ok
    error
  }
}

### 10.10
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: X-JWT: login하고 생성된 token

mutation {
  editRestaurant(input: {
    restaurantId: 3
    name: "The BBQ House"
    categoryName: "Mexican Food"
  }) {
    ok
    error
  }
}

### 10.10
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 10.6
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createRestaurant(input: {
    name: "BBQ House"
    coverImg: "https:///"
    address: "123 Altavista"
    categoryName: "Korean BBq"
  }) {
    ok
    error
  }
}

### 10.6
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

query {
  userProfile(userId: 10) {
    ok
    error
    user {
      email
    }
  }
}

### 10.6
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

query {
  me {
    id
    email
  }
}

### 10.6
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 10.6
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  verifyEmail(input: {
    code: "createAccount를 mutation 할 때 생성된 code"
  }) {
    ok
    error
  }
}

### 10.6
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  createAccount(input: {
    email: "admin@admin.com"
    password: "123"
    role: Owner
  }) {
    ok
    error
  }
}

### 10.3
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createRestaurant(input: {
    name: "BBQ House 11"
    coverImg: "https:///"
    address: "123 Seoul-ro"
    categoryName: "Korean bbq"
  }) {
    ok
    error
  }
}

### 10.3
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createRestaurant(input: {
    name: "BBQ House"
    coverImg: "https:///"
    address: "123 Altavista"
    categoryName: "Korean BBq"
  }) {
    ok
    error
  }
}

### 10.3
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "new@account.com"
    password: "121212"
  }) {
    ok
    error
    token
  }
}

### 10.3
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  verifyEmail(input: {
    code: "createAccount를 mutation 할 때 생성된 code"
  }) {
    ok
    error
  }
}

### 10.3
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  createAccount(input: {
    email: "new@account.com"
    password: "121212"
    role: Owner
  }) {
    ok
    error
  }
}

###
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  editProfile(input: {
    email: "hahaha@lololo.com"
  }) {
    ok
    error
  }
}

###
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "aaa@las.com"
    password: "12345"
  }) {
    ok
    error
    token
  }
}

###
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  createAccount(input: {
    email: "aaa@las.com"
    password: "12345"
    role: Client
  }) {
    ok
    error
  }
}