### 12.12
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: delivery로 login하고 생성된 token

mutation {
  editOrder(input: {
    id: 2
    status: Delivered
  }) {
    ok
    error
  }
}

### 12.12
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: delivery로 login하고 생성된 token

mutation {
  editOrder(input: {
    id: 2
    status: PickedUp
  }) {
    ok
    error
  }
}

### 12.12
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: delivery로 login하고 생성된 token

mutation {
  takeOrder(input: {
    id: 2
  }) {
    ok
    error
  }
}

### 12.12
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "delivery@delivery.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.12
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.11
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: owner로 login하고 생성된 token

mutation {
  editOrder(input: {
    id: 4
    status: Cooking
  }) {
    ok
    error
  }
}

### 12.11
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: owner로 login하고 생성된 token

mutation {
  editOrder(input: {
    id: 5
    status: Cooking
  }) {
    ok
    error
  }
}

### 12.11
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: owner로 login하고 생성된 token

mutation {
  editOrder(input: {
    id: 5
    status: Cooked
  }) {
    ok
    error
  }
}

### 12.11
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.11
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "nico@customer.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.10
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: owner로 login하고 생성된 token

mutation {
  editOrder(input: {
    id: 4
    status: Cooked
  }) {
    ok
    error
  }
}

### 12.10
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.10
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "delivery@delivery.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.9
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: owner로 login하고 생성된 token

mutation {
  editOrder(input: {
    id: 3
    status: Cooked
  }) {
    ok
    error
  }
}

### 12.9
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.9
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "delivery@delivery.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.9
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  verifyEmail(input: {
    code: "createAccount를 mutation 할 때 생성된 code"
  }) {
    ok
    error
  }
}

### 12.9
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  createAccount(input: {
    email: "delivery@delivery.com"
    password: "123"
    role: Delivery
  }) {
    ok
    error
  }
}

### 12.8
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: client로 login하고 생성된 token

mutation {
  createOrder(input: {
    restaurantId: 10
    items: [
      {
        dishId: 3
        options: []
      }
    ]
  }) {
    ok
    error
  }
}

### 12.8
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "nico@customer.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.8
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.7
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: client로 login하고 생성된 token

mutation {
  createOrder(input: {
    restaurantId: 10
    items: [
      {
        dishId: 3
        options: []
      }
    ]
  }) {
    ok
    error
  }
}

### 12.7
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "nico@customer.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.7
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: owner로 login하고 생성된 token

query {
  me {
    role
    email
  }
}

### 12.7
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.6
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  potatoReady(potatoId: 1) 
}

### 12.6
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  potatoReady(potatoId: 88) 
}

### 12.6
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.5
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  potatoReady(potatoId: 888) 
}

### 12.5
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  potatoReady(potatoId: 1) 
}

### 12.5
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  potatoReady(potatoId: 99) 
}

### 12.5
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  potatoReady(potatoId: 33) 
}

### 12.5
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  potatoReady(potatoId: 8) 
}

### 12.5
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.4
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  potatoReady 
}

### 12.4
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.3
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: owner로 login하고 생성된 token

query {
  me {
    email
  }
}

### 12.3
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.2
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: owner로 login하고 생성된 token

query {
  me {
    email
  }
}

### 12.2
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.1
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  potatoReady 
}

### 12.1
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: owner로 login하고 생성된 token

query {
  me {
    email
  }
}

### 12.1
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.0
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: owner로 login하고 생성된 token

query {
  me {
    email
  }
}

### 12.0
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: owner로 login하고 생성된 token

mutation {
  editOrder(input: {
    id: 2
    status: Cooked
  }) {
    ok
    error
  }
}

### 12.0
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: owner로 login하고 생성된 token

mutation {
  editOrder(input: {
    id: 2
    status: PickedUp
  }) {
    ok
    error
  }
}

### 12.0
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: owner로 login하고 생성된 token

mutation {
  editOrder(input: {
    id: 2
    status: Cooking
  }) {
    ok
    error
  }
}

### 12.0
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 12.0
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: client로 login하고 생성된 token

mutation {
  editOrder(input: {
    id: 2
    status: Cooked
  }) {
    ok
    error
  }
}

### 12.0
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "nico@customer.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 11.13
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: client로 login하고 생성된 token

query {
  me {
    email
    role
  }
  getOrder(input: {
    id: 2
  }) {
    ok
    order {
      id
      status
    }
    error
  }
}

### 11.13
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: owner로 login하고 생성된 token

query {
  me {
    email
    role
  }
  getOrder(input: {
    id: 2
  }) {
    ok
    order {
      id
      status
    }
    error
  }
}

### 11.13
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: Any Role로 login하고 생성된 token

query {
  getOrders(input: {
    status: Pending
  }) {
    ok
    orders {
      id
    }
    error
  }
}

### 11.13
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 11.12
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: Any Role로 login하고 생성된 token

query {
  getOrders(input: {
  }) {
    ok
    orders {
      id
    }
    error
  }
}

### 11.12
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 11.11
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: client로 login하고 생성된 token

mutation {
  createOrder(input: {
    restaurantId: 10
    items: [
      {
        dishId: 2
        options: [
          {
            name: "Spice Level",
            choice: "Kill Me"
          },
          {
            name: "Size",
            choice: "XL"
          },
          {
            name: "Pickle"
          }
        ]
      },
      {
        dishId: 3
        options: [
          {
            name: "Size",
            choice: "L"
          }
        ]
      }
    ]
  }) {
    ok
    error
  }
}

### 11.11
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: owner로 login하고 생성된 token

mutation {
  createDish(input: {
    restaurantId: 10
    name: "Mexican Chicken"
    price: 12
    description: "Delicious"
    options: [
      {
        name: "Spice Level"
        choices: [
          {
            name: "Little bit"
          }, 
          {
            name: "Kill me"
          }
        ]
      },
      {
        name: "Pickle",
        extra: 1
      },
      {
        name: "Size"
        choices: [
          {
            name: "L", 
            extra: 2    
          },
          {
            name: "XL", 
            extra: 5
          }
        ]
      }
    ]
  }) {
    ok
    error
  }
}

### 11.11
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: client로 login하고 생성된 token

mutation {
  createOrder(input: {
    restaurantId: 10
    items: [
      {
        dishId: 2
        options: [
          {
            name: "Spice Level",
            choice: "Kill Me"
          },
          {
            name: "Size",
            choice: "XL"
          },
          {
            name: "Pickle"
          }
        ]
      }
    ]
  }) {
    ok
    error
  }
}

### 11.11
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "nico@customer.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 11.10
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createOrder(input: {
    restaurantId: 10
    items: [
      {
        dishId: 2
        options: [
          {
            name: "Spice Level",
            choice: "Kill Me"
          },
          {
            name: "Size",
            choice: "XL"
          },
          {
            name: "Pickle"
          }
        ]
      }
    ]
  }) {
    ok
    error
  }
}

### 11.10
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "nico@customer.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 11.8
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createOrder(input: {
    restaurantId: 10
    items: [
      {
        dishId: 2
        options: [
          {
            name: "Spice Level",
            choice: {
              name: "Kill Me"
            }
          },
          {
            name: "Size",
            choice: {
              name: "XL",
              extra: 5
            }
          }
        ]
      }
    ]
  }) {
    ok
    error
  }
}

### 11.8
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  restaurant(input: {
    restaurantId: 10
  }) {
    ok
    error
    restaurant {
      menu {
        name
        id
        price
        options {
          name
          choices {
            name
            extra
          }
          extra
        }
      }
    }
  }
}

### 11.8
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createOrder(input: {
    restaurantId: 10
    items: []
  }) {
    ok
    error
  }
}

### 11.8
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "nico@customer.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 11.8
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  verifyEmail(input: {
    code: "createAccount를 mutation 할 때 생성된 code"
  }) {
    ok
    error
  }
}

### 11.8
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  createAccount(input: {
    email: "nico@customer.com"
    password: "123"
    role: Client
  }) {
    ok
    error
  }
}

### 11.3
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  editDish(input: {
    dishId: 2
    name: "Super Mexican Taco Chicken"
  }) {
    ok
    error
  }
}

### 11.3
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createDish(input: {
    restaurantId: 10
    name: "Mexican Chicken"
    price: 12
    description: "Delicious"
    options: [
      {
        name: "Spice Level"
        choices: [
          {
            name: "Little bit"
          }, 
          {
            name: "Kill me"
          }
        ]
      },
      {
        name: "Pickle",
        extra: 1
      },
      {
        name: "Size"
        choices: [
          {
            name: "L", 
            extra: 2    
          },
          {
            name: "XL", 
            extra: 5
          }
        ]
      }
    ]
  }) {
    ok
    error
  }
}

### 11.3
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  deleteDish(input: {
    dishId: 1
  }) {
    ok
    error
  }
}

### 11.3
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 11.2
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  restaurant(input: {
    restaurantId: 10
  }) {
    ok
    error
    restaurant {
      name
      menu {
        name
        price
        description
        options {
          name
          extra
          choices
        }
      }
    }
  }
}

### 11.2
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createDish(input: {
    restaurantId: 10
    name: "Mexican Chicken"
    price: 12
    description: "Delicious"
    options: [
      {
        name: "Spice Level"
        choices: [
          "Little bit",
          "Kill me"
        ]
      }
    ]
  }) {
    ok
    error
  }
}

### 11.2
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 10.18
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  searchRestaurant(input: {
    query: "BbQ"
  }) {
    ok
    error
    totalPages
    totalResults
    restaurants {
      name
    }
  }
}

### 10.18
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  searchRestaurant(input: {
    query: "BBQ"
  }) {
    ok
    error
    totalPages
    totalResults
    restaurants {
      name
    }
  }
}

### 10.18
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  searchRestaurant(input: {
    query: "bbq"
  }) {
    ok
    error
    totalPages
    totalResults
    restaurants {
      name
    }
  }
}

### 10.18
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  searchRestaurant(input: {
    query: "bb"
  }) {
    ok
    error
    totalPages
    totalResults
    restaurants {
      name
    }
  }
}

### 10.17
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  restaurant(input: {
    restaurantId: 666
  }) {
    ok
    error
    restaurant {
      id
      name
    }
  }
}

### 10.17
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  restaurant(input: {
    restaurantId: 9
  }) {
    ok
    error
    restaurant {
      id
      name
    }
  }
}

### 10.16
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  restaurants(input: {}) {
    ok
    error
    totalPages
    totalResults
    results {
      id
      name
    }
  }
}

### 10.16
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  category(input: {
    slug: "korean-bbq",
    page: 1
  }) {
    ok
    error
    totalPages
    category {
      name
      restaurantCount
    }
    restaurants {
      id
      name
    }
  }
}

### 10.16
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createRestaurant(input: {
    name: "BBQui"
    coverImg: "https:///"
    address: "123 Altavista"
    categoryName: "Korean BBq"
  }) {
    ok
    error
  }
}

### 10.16
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createRestaurant(input: {
    name: "Super BBQ"
    coverImg: "https:///"
    address: "123 Altavista"
    categoryName: "Korean BBq"
  }) {
    ok
    error
  }
}

### 10.16
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createRestaurant(input: {
    name: "The BBQ Place"
    coverImg: "https:///"
    address: "123 Altavista"
    categoryName: "Korean BBq"
  }) {
    ok
    error
  }
}

### 10.16
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createRestaurant(input: {
    name: "Our BBQ House"
    coverImg: "https:///"
    address: "123 Altavista"
    categoryName: "Korean BBq"
  }) {
    ok
    error
  }
}

### 10.16
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createRestaurant(input: {
    name: "The BBQ House"
    coverImg: "https:///"
    address: "123 Altavista"
    categoryName: "Korean BBq"
  }) {
    ok
    error
  }
}

### 10.16
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createRestaurant(input: {
    name: "My BBQ House"
    coverImg: "https:///"
    address: "123 Altavista"
    categoryName: "Korean BBq"
  }) {
    ok
    error
  }
}

### 10.16
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 10.15
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  category(input: {
    slug: "korean-bbq",
    page: 1
  }) {
    ok
    error
    totalPages
    category {
      restaurantCount
      restaurants {
        id
        name
      }
    }
  }
}

### 10.15
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  category(input: {
    slug: "korean-bbq",
    page: 2
  }) {
    ok
    error
    totalPages
    category {
      restaurantCount
      restaurants {
        id
        name
      }
    }
  }
}

### 10.15
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  category(input: {
    slug: "korean-bbq"
  }) {
    ok
    error
    totalPages
    category {
      restaurantCount
      restaurants {
        id
        name
      }
    }
  }
}

### 10.14
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  category(slug: "mexican-food") {
    ok
    error
    category {
      id
      name
      slug
      restaurantCount
      restaurants {
        id
        name
      }
    }
  }
}

### 10.14
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  category(slug: "mexican-bbq") {
    ok
    error
    category {
      id
      name
      slug
      restaurantCount
      restaurants {
        id
        name
      }
    }
  }
}

### 10.14
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  category(slug: "korean-bbq") {
    ok
    error
    category {
      id
      name
      slug
      restaurantCount
      restaurants {
        id
        name
      }
    }
  }
}

### 10.13
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  allCategories {
    ok
    error
    categories {
      slug
      name
      restaurantCount
    }
  }
}

### 10.13
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createRestaurant(input: {
    name: "BBQ House"
    coverImg: "https:///"
    address: "123 Altavista"
    categoryName: "Korean BBq"
  }) {
    ok
    error
  }
}

### 10.13
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 10.13
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  allCategories {
    ok
    error
    categories {
      slug
      name
      restaurantCount
    }
  }
}

### 10.12
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  allCategories {
    ok
    error
    categories {
      slug
      name
      restaurantCount
    }
  }
}

### 10.12
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  allCategories {
    ok
    error
    categories {
      slug
      name
    }
  }
}

### 10.10
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: X-JWT: login하고 생성된 token

mutation {
  editRestaurant(input: {
    restaurantId: 3
    name: "The Mexican House"
  }) {
    ok
    error
  }
}

### 10.10
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: X-JWT: login하고 생성된 token

mutation {
  editRestaurant(input: {
    restaurantId: 3
    name: "The BBQ House"
  }) {
    ok
    error
  }
}

### 10.10
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: X-JWT: login하고 생성된 token

mutation {
  editRestaurant(input: {
    restaurantId: 3
    name: "The BBQ House"
    categoryName: "Mexican Food"
  }) {
    ok
    error
  }
}

### 10.10
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 10.6
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createRestaurant(input: {
    name: "BBQ House"
    coverImg: "https:///"
    address: "123 Altavista"
    categoryName: "Korean BBq"
  }) {
    ok
    error
  }
}

### 10.6
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

query {
  userProfile(userId: 10) {
    ok
    error
    user {
      email
    }
  }
}

### 10.6
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

query {
  me {
    id
    email
  }
}

### 10.6
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "admin@admin.com"
    password: "123"
  }) {
    ok
    error
    token
  }
}

### 10.6
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  verifyEmail(input: {
    code: "createAccount를 mutation 할 때 생성된 code"
  }) {
    ok
    error
  }
}

### 10.6
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  createAccount(input: {
    email: "admin@admin.com"
    password: "123"
    role: Owner
  }) {
    ok
    error
  }
}

### 10.3
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createRestaurant(input: {
    name: "BBQ House 11"
    coverImg: "https:///"
    address: "123 Seoul-ro"
    categoryName: "Korean bbq"
  }) {
    ok
    error
  }
}

### 10.3
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  createRestaurant(input: {
    name: "BBQ House"
    coverImg: "https:///"
    address: "123 Altavista"
    categoryName: "Korean BBq"
  }) {
    ok
    error
  }
}

### 10.3
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "new@account.com"
    password: "121212"
  }) {
    ok
    error
    token
  }
}

### 10.3
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  verifyEmail(input: {
    code: "createAccount를 mutation 할 때 생성된 code"
  }) {
    ok
    error
  }
}

### 10.3
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  createAccount(input: {
    email: "new@account.com"
    password: "121212"
    role: Owner
  }) {
    ok
    error
  }
}

###
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL
X-JWT: login하고 생성된 token

mutation {
  editProfile(input: {
    email: "hahaha@lololo.com"
  }) {
    ok
    error
  }
}

###
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(input: {
    email: "aaa@las.com"
    password: "12345"
  }) {
    ok
    error
    token
  }
}

###
POST http://localhost:3000/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  createAccount(input: {
    email: "aaa@las.com"
    password: "12345"
    role: Client
  }) {
    ok
    error
  }
}